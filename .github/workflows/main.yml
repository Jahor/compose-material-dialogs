name: Build & test

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2
      - name: set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches/modules-*
            ~/.gradle/caches/jars-*
            ~/.gradle/caches/build-cache-*
          key: gradle-${{ hashFiles('checksum.txt') }}

      - name: Build, lint and spotless
        run: ./gradlew spotlessCheck assemble assembleAndroidTest lintDebug

  test:
    runs-on: macOS-latest
    needs: build
    timeout-minutes: 60

    strategy:
      fail-fast: false
      matrix:
        api-level: [28, 29]
    steps:
      - uses: actions/checkout@v2
      - name: set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches/modules-*
            ~/.gradle/caches/jars-*
            ~/.gradle/caches/build-cache-*
          key: gradle-${{ hashFiles('checksum.txt') }}

      - name: Build tests
        run: ./gradlew assembleDebugAndroidTest

      - name: Run functional tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          profile: Nexus 6P
          script: ./gradlew connectedCheck -Pandroid.testInstrumentationRunnerArguments.filter=com.vanpra.composematerialdialogs.test.util.NotScreenshotTestFilter

      - name: Upload functional test results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: test-results-functional-${{ matrix.api-level }}
          path: "**/build/outputs/*/connected/*.xml"

      - name: Run screenshot tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          profile: Nexus 6P
          script: ./gradlew executeScreenshotTests -Pandroid.testInstrumentationRunnerArguments.filter=com.vanpra.composematerialdialogs.test.util.ScreenshotTestFilter

      - name: Upload screenshot test results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: test-results-screenshots
          path: "**/build/reports/shot/verification"
